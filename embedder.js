constDiscord=require('discord.js')

classEmbedder{
/**
*
*@returns{module:"discord.js".MessageEmbed}
*/
getBaseEmbed(){
returnnewDiscord.MessageEmbed()
.setColor([46,115,189])
}

/**
*
*@param{Object}song
*@returns{MessageEmbed}
*/
createNowPlayingEmbed(song){
returnthis.getBaseEmbed()
.setTitle("NowPlaying")
.setDescription(`[${song.title}](${song.url})[<@${song.requesterId}>]`)
.setThumbnail(song.thumbnail_url)
}

/**
*
*@param{Object}song
*@param{Array}queue
*@return{MessageEmbed}
*/
createQueueEmbed(queue,song){
if(queue.length===0){
returnthis.createBasicMessageEmbed('Queueisempty')
}
letqueueString=""
queue.forEach(song=>{
queueString+=`${song.title}\t\t${song.length}s\n`
})
constnewlyQueued=song==null?"":`<@${song.requesterId}>queued:[${song.title}](${song.url})`
returnthis.getBaseEmbed()
.setTitle('Queued')
.setDescription(`${newlyQueued}\n\`\`\`\n${queueString}\`\`\``)
}

/**
*
*@param{Array}queue
*@param{int}index
*/
createSongDetailsEmbed(queue,index){
if(index<0||!queue[index]){
returnthis.createBasicMessageEmbed('Invalidindexprovided')
}
constsong=queue[index]
consttitle=index===0?'CurrentSong':`Song${index}`
returnthis.getBaseEmbed()
.setTitle(title)
.setDescription(`[${song.title}](${song.url})queued[<@${song.requesterId}>]`)
}

/**
*
*@param{string}filePath
*@param{string}caption
*@param{string}userId
*@returns{MessageEmbed}
*/
createRecordingFileEmbed(filePath,caption,userId){
constmessageAttachment=newDiscord.MessageAttachment(filePath,`${caption}.mp3`)
returnthis.getBaseEmbed()
.setDescription(`Recordingfrom[<@${userId}>]`)
.attachFiles(messageAttachment)
}

/**
*
*@param{object}command
*@returns{MessageEmbed}
*/
createCommandHelpEmbed(command){
constfields=[]
command["args"].forEach(arg=>{
letflag=arg["flag"]==='_'?'':`-${arg["flag"]}:`
fields.push({
name:arg["name"],
value:`${flag}${arg["description"]}`
})
})
returnthis.getBaseEmbed()
.setDescription(command["description"])
.addFields(fields)
}

/**
*
*@param{string}message
*/
createBasicMessageEmbed(message){
returnthis.getBaseEmbed()
.setDescription(`\`\`\`${message}\`\`\``)
}
}

module.exports.Embedder=newEmbedder()